Goal: 

1. Stringify control configs and upload to Supabase as Json
2. Serialize Json controls configs and load as a preset

The preset switcher currently handles the loading of different presets
By merging custom configs with the default config for each control
Outputs are automatically derived from these configs (go svelte stores!) so there's no worries here

Tricky Parts:
1. Functions are not serializable.

You can store them as strings and then use eval() or new Function() to execute them
However this is open to security risks and is not recommended

Best method will likely be to store the function id
Then run a lookup to try retrieve the correct function on load


Steps:
For preset creation we only need control configs, and control signal configs (these need additional id and context to aid lookup process):
1. Function to stringify current control configs state
	Needs to call get() on each control config and then also on each signal config

	Probably return an object
		controlId {
			controlConfig: controlConfig,
			signalConfig: signalConfig
		}

	Or just return the configs but instead of returning raw configs (which wont work)
	We call a extractConfig() on the control that returns a get() of the config

	Then we can just call extractConfig() on each control and signal config
	